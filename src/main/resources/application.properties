spring.application.name=ClubManagementApplication

## Postgres Connection
spring.datasource.url=jdbc:postgresql://localhost:5432/crozhere_db
spring.datasource.username=crozhere
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true



# MongoDB connection
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=club_layout_db

# OpenAPI Documentation
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.syntaxHighlight.activated=true
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.doc-expansion=none
springdoc.swagger-ui.default-models-expand-depth=-1

# Group API endpoints by controller
springdoc.group-configs[0].group=auth
springdoc.group-configs[0].paths-to-match=/auth/**

springdoc.group-configs[1].group=club-admins
springdoc.group-configs[1].paths-to-match=/club-admins/**

springdoc.group-configs[2].group=players
springdoc.group-configs[2].paths-to-match=/players/**

springdoc.group-configs[3].group=club-management
springdoc.group-configs[3].paths-to-match=/manage/clubs/**

springdoc.group-configs[4].group=bookings
springdoc.group-configs[4].paths-to-match=/booking/**

springdoc.group-configs[5].group=payment
springdoc.group-configs[5].paths-to-match=/payment/**

springdoc.group-configs[6].group=club-availability
springdoc.group-configs[6].paths-to-match=/club/availability/**

springdoc.group-configs[7].group=clubs
springdoc.group-configs[7].paths-to-match=/clubs/**